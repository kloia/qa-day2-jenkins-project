def reportName = "Local Mobil"
pipeline {
    agent any
    parameters {
        choice(name: 'Environment', choices: ['qa', 'test'], description: '')
        string(name: 'TagName', defaultValue: '@smoke', description: '')
        gitParameter name: 'BRANCH_TAG',
                type: 'PT_BRANCH',
                defaultValue: 'master',
                selectedValue: 'DEFAULT',
                quickFilterEnabled: true,
                sortMode: 'DESCENDING_SMART',
                tagFilter: '*',
                branchFilter: 'origin/(.*)',
                useRepository: '.*.git',
                description: 'Select your branch'
    }
    stages {
        stage('Slack Notification') {
            steps {
                script{
                    slackSend(
                            color: "#7aabcc",
                            message:":information_source: ${reportName} job has been started at test env. => (<${env.JOB_URL}${BUILD_NUMBER}|Build Link>)"
                    )}
            }
        }
        stage('Checkout') {
            steps {
                checkout([$class                           : 'GitSCM',
                          branches                         : [[name: "${params.BRANCH_TAG}"]],
                          doGenerateSubmoduleConfigurations: false,
                          extensions                       : [],
                          gitTool                          : 'default',
                          submoduleCfg                     : [],
                          userRemoteConfigs                : [[credentialsId: 'qa-day2-jenkins-token', url: 'https://github.com/kloia/qa-day-2-android-ruby.git']]])
            }
        }
        stage('Running Test') {
            steps {
                sh """
                bundle install
                bundle exec cucumber --tags "${params.TagName}" env=${params.Environment}
                 """
            }
        }
    }
    post {
        always {
            allure([includeProperties: false,
                    jdk              : '',
                    properties       : [],
                    reportBuildPolicy: 'ALWAYS',
                    results          : [[path: 'output/allure-results']]])
        }
        success{
            script{
                slackSend(
                        color: "#70FD01",
                        message:":white_check_mark: *(<${env.JOB_URL}${BUILD_NUMBER}/allure|${reportName} Success Test Automation Report>)*\n\n"
                )
            }
        }
        failure{
            script{
                slackSend(
                        color: "#FF0000",
                        message:":white_check_mark: *(<${env.JOB_URL}${BUILD_NUMBER}/allure|${reportName} Failure Test Automation Report>)*\n\n"
                )
            }
        }
        aborted{
            script{
                slackSend(
                        color: "#BCBCBC",
                        message:":white_check_mark: *(<${env.JOB_URL}${BUILD_NUMBER}/allure|${reportName} Aborted Test Automation Report>)*\n\n"
                )
            }
        }
    }
}